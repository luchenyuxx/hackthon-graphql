schema {
    query: Query
}

type Query {
    blocks: [Block]
    addresses: [Address]
    transactions: [Transaction]
}

type Block {
    hash: String
    height: Int
    time: String
    transactions: [String] # Should be [Transactions]
}

type Address {
    balance: Int
    nonce: Int
    transactions: [Transaction]
    pendingTransactions: [PendingTransaction]
    estimatedGasLimit: Int
}

type Transaction {
    hash: String
    status: Int
    receivedAt: String
    nonce: String
    value: Int
    gas: Int
    gasPrice: Int
    from: String
    to: String
    input: String
    cumulativeGasUsed: Int
    gasUsed: Int
    transferEvents: [TransferEvent]
    block: Block
}

type TransferEvent {
    contract: String
    from: String
    to: String
    count: Int
    decimal: Int
    symbol: String
}

type PendingTransaction {
    hash: String
    nonce: String
    value: Int
    gas: Int
    gasPrice: Int
    from: String
    to: String
    input: String
}
