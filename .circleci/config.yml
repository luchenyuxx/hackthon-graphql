version: 2.1

orbs:
  docker: ledger/docker@volatile

aliases:
  - &filter_all_tags
      tags:
        only: /.*/
  - &dependencies_cache
      keys:
        - dsense-gateway-{{ .Branch }}-{{ checksum "build.sbt" }}
        - dsense-gateway-{{ .Branch }}-
        - dsense-gateway-

jobs:
  compile:
    docker:
      - image: ledgerhq/sbt-openjdk-8
        auth:
          username: $DOCKER_USERNAME
          password: $DOCKER_PASSWORD
    environment:
      JVM_OPTS: -Xmx3200m
      TERM: dumb
    steps:
      - checkout
      - restore_cache: *dependencies_cache
      - run:
          name: Compile
          command: sbt -Dsbt.ivy.home=.ivy2 -sbt-dir .sbt compile test:compile
      - save_cache:
          paths:
            - target
            - project/target
            - .ivy2
            - .sbt
          key: dsense-gateway-{{ .Branch }}-{{ checksum "build.sbt" }}

  scala_linter:
    docker:
      - image: ledgerhq/sbt-openjdk-8
        auth:
          username: $DOCKER_USERNAME
          password: $DOCKER_PASSWORD
    steps:
      - checkout
      - run:
          name: Run scalastyle
          command: sbt -Dsbt.ivy.home=.ivy2 -sbt-dir .sbt scalastyle

  unit_tests:
    docker:
      - image: ledgerhq/sbt-openjdk-8
        auth:
          username: $DOCKER_USERNAME
          password: $DOCKER_PASSWORD
    environment:
      JVM_OPTS: -Xmx3200m
      TERM: dumb
    steps:
      - checkout
      - restore_cache: *dependencies_cache
      - run:
          name: Run unit tests
          command: sbt -Dsbt.ivy.home=.ivy2 -sbt-dir .sbt test

  integration_tests:
    docker:
      - image: ledgerhq/sbt-openjdk-8
        auth:
          username: $DOCKER_USERNAME
          password: $DOCKER_PASSWORD
    environment:
      JVM_OPTS: -Xmx3200m
      TERM: dumb
    steps:
      - checkout
      - restore_cache: *dependencies_cache
      - run:
          name: Run unit tests
          command: sbt -Dsbt.ivy.home=.ivy2 -sbt-dir .sbt it:test

workflows:
  build_test_and_publish:
    jobs:
      - compile:
          filters: *filter_all_tags
      - scala_linter:
          filters: *filter_all_tags
      - unit_tests:
          requires:
            - compile
          filters: *filter_all_tags
      - integration_tests:
          requires:
            - compile
          filters:
            branches:
              only:
                - develop
                - release_candidate
                - master
            tags:
              only: /.*/
      - docker/build_image:
          docker_login: true
          requires:
            - compile
          filters: *filter_all_tags
      - docker/test_image:
          requires:
            - docker/build_image
          dgoss_docker_env_vars: |-
            DSENSE_GATEWAY_SERVER_HOST=0.0.0.0
            DSENSE_GATEWAY_SERVER_PORT=8000
            DSENSE_GATEWAY_SERVER_PATH=/
            DSENSE_GATEWAY_DATABASE_TYPE=h2
            DSENSE_GATEWAY_DATABASE_DRIVER=org.h2.Driver
            DSENSE_GATEWAY_DATABASE_URL=jdbc:h2:mem:dsense-gateway;MODE=PostgreSQL;DB_CLOSE_DELAY=-1
            DSENSE_GATEWAY_DATABASE_USER=sa
            DSENSE_GATEWAY_DATABASE_PASSWORD=
            DSENSE_GATEWAY_DATABASE_SCHEMA=db
            DSENSE_GATEWAY_SMART_CONTRACT_ADDRESS=0x8EBC30a30C04A059810d74866c0732Adb6195B78
            DSENSE_GATEWAY_SMART_CONTRACT_METHOD=sendData
            DSENSE_GATEWAY_CHAIN_ID=3
            DSENSE_GATEWAY_GAS_LIMIT=100000
            DSENSE_GATEWAY_PROVIDER_ADDRESS=https://rpc.slock.it/tobalaba
          filters: *filter_all_tags
      - docker/publish_image:
          requires:
            - scala_linter
            - unit_tests
            - integration_tests
            - docker/test_image
          filters:
            branches:
              only:
                - develop
                - release_candidate
                - master
            tags:
              only: /.*/
